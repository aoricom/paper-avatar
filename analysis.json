{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "paper-avatar.js",
      "properties": [
        {
          "name": "keyEventTarget",
          "type": "?EventTarget",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 272,
              "column": 4
            },
            "end": {
              "line": 277,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "stopKeyboardEventPropagation",
          "type": "boolean | null | undefined",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 283,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 63
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "_boundKeyHandlers",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 285,
              "column": 4
            },
            "end": {
              "line": 290,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]",
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "_imperativeKeyBindings",
          "type": "Object | null | undefined",
          "description": "own properties of everything on the \"prototype\".",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 294,
              "column": 4
            },
            "end": {
              "line": 299,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "keyBindings",
          "type": "!Object",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 78,
              "column": 2
            },
            "end": {
              "line": 82,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "pressed",
          "type": "boolean | null | undefined",
          "description": "If true, the user is currently holding down the button.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 26,
              "column": 4
            },
            "end": {
              "line": 32,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_pressedChanged\"",
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "toggles",
          "type": "boolean | null | undefined",
          "description": "If true, the button toggles the active state with each tap or press\nof the spacebar.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 38,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 68
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "active",
          "type": "boolean | null | undefined",
          "description": "If true, the button is a toggle and is currently in the active state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 43,
              "column": 4
            },
            "end": {
              "line": 44,
              "column": 77
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "pointerDown",
          "type": "boolean | null | undefined",
          "description": "True if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 51,
              "column": 62
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "receivedFocusFromKeyboard",
          "type": "boolean | null | undefined",
          "description": "True if the input device that caused the element to receive focus\nwas a keyboard.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 57,
              "column": 62
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "ariaActiveAttribute",
          "type": "string | null | undefined",
          "description": "The aria attribute to be set if the button is a toggle and in the\nactive state.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_ariaActiveAttributeChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"aria-pressed\"",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_mouseEventRe",
          "type": "RegExp",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 84,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "focused",
          "type": "boolean | null | undefined",
          "description": "If true, the element currently has focus.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-control-state.js",
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 31,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronControlState"
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "If true, the user cannot interact with this element.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-control-state.js",
            "start": {
              "line": 36,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_disabledChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronControlState"
        },
        {
          "name": "_oldTabIndex",
          "type": "(?string | undefined)",
          "description": "Value of the `tabindex` attribute before `disabled` was activated.\n`null` means the attribute was not present.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-control-state.js",
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 49,
              "column": 32
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IronControlState"
        },
        {
          "name": "_boundFocusBlurHandler",
          "type": "Function | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-control-state.js",
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 56,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "IronControlState"
        },
        {
          "name": "__handleEventRetargeting",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-control-state.js",
            "start": {
              "line": 58,
              "column": 4
            },
            "end": {
              "line": 63,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "IronControlState"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "If true, the element will not produce a ripple effect when interacted\nwith via the pointer.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-ripple-behavior.js",
            "start": {
              "line": 30,
              "column": 4
            },
            "end": {
              "line": 30,
              "column": 53
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noinkChanged\"",
              "attributeType": "Boolean"
            }
          },
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "_rippleContainer",
          "type": "(Element | undefined)",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-ripple-behavior.js",
            "start": {
              "line": 35,
              "column": 4
            },
            "end": {
              "line": 37,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "elevation",
          "type": "number | null | undefined",
          "description": "The z-depth of this element, from 0-5. Setting to 0 will remove the\nshadow, and each increasing number greater than 0 will be \"deeper\"\nthan the last.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-button-behavior.js",
            "start": {
              "line": 27,
              "column": 4
            },
            "end": {
              "line": 27,
              "column": 71
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Number"
            }
          },
          "inheritedFrom": "Polymer.PaperButtonBehavior"
        },
        {
          "name": "hostAttributes",
          "type": "Object",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-button-behavior.js",
            "start": {
              "line": 35,
              "column": 2
            },
            "end": {
              "line": 35,
              "column": 65
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "Polymer.PaperButtonBehavior"
        },
        {
          "name": "imageLoaded",
          "type": "boolean | null | undefined",
          "description": "Notify that the image is loaded.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "iconSrc",
          "type": "string | null | undefined",
          "description": "The URL of an image for the icon. If the srcImage property is specified,\nthe icon property should not be.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Specifies the icon name or index in the set of icons available in\nthe icon's icon set. If the icon property is specified,\nthe src property should not be.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"social:person-outline\""
        },
        {
          "name": "imageSrc",
          "type": "string | null | undefined",
          "description": "Permit to set the image source path or url.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "mini",
          "type": "boolean | null | undefined",
          "description": "Set this to true to style this is a \"mini\" FAB.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "The label displayed in the badge. The label is centered, and ideally\nshould have very few characters.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_labelChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "imageSizing",
          "type": "string | null | undefined",
          "description": "Permit to set the sizing image mode. The possible values are \"contain\" or \"cover\"",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"contain\""
        },
        {
          "name": "_template",
          "type": "?",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 135,
              "column": 1
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          }
        }
      ],
      "methods": [
        {
          "name": "registered",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 312,
              "column": 2
            },
            "end": {
              "line": 314,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 316,
              "column": 2
            },
            "end": {
              "line": 318,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 320,
              "column": 2
            },
            "end": {
              "line": 322,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "addOwnKeyBinding",
          "description": "Can be used to imperatively add a key binding to the implementing\nelement. This is the imperative equivalent of declaring a keybinding\nin the `keyBindings` prototype property.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 332,
              "column": 2
            },
            "end": {
              "line": 336,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString",
              "type": "string"
            },
            {
              "name": "handlerName",
              "type": "string"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "removeOwnKeyBindings",
          "description": "When called, will remove all imperatively-added key bindings.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 341,
              "column": 2
            },
            "end": {
              "line": 345,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "keyboardEventMatchesKeys",
          "description": "Returns true if a keyboard event matches `eventString`.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 354,
              "column": 2
            },
            "end": {
              "line": 362,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "KeyboardEvent"
            },
            {
              "name": "eventString",
              "type": "string"
            }
          ],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "_collectKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 364,
              "column": 2
            },
            "end": {
              "line": 374,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "_prepKeyBindings",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 376,
              "column": 2
            },
            "end": {
              "line": 398,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "_addKeyBinding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 400,
              "column": 2
            },
            "end": {
              "line": 407,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "eventString"
            },
            {
              "name": "handlerName"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "_resetKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 409,
              "column": 2
            },
            "end": {
              "line": 415,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "_listenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 417,
              "column": 2
            },
            "end": {
              "line": 430,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "_unlistenKeyEventListeners",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 432,
              "column": 2
            },
            "end": {
              "line": 447,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "_onKeyBindingEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 449,
              "column": 2
            },
            "end": {
              "line": 470,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyBindings"
            },
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "_triggerKeyHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 472,
              "column": 2
            },
            "end": {
              "line": 481,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "keyCombo"
            },
            {
              "name": "handlerName"
            },
            {
              "name": "keyboardEvent"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "_tapHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 93,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_focusChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 95,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "focused"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_detectKeyboardFocus",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 103,
              "column": 2
            },
            "end": {
              "line": 105,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "focused"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_userActivate",
          "description": "'change' events",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 109,
              "column": 2
            },
            "end": {
              "line": 114,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_downHandler",
          "description": "In addition to the functionality provided in `IronButtonState`, ensures\na ripple effect is created when the element is in a `pressed` state.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-ripple-behavior.js",
            "start": {
              "line": 54,
              "column": 2
            },
            "end": {
              "line": 59,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "_upHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 125,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_spaceKeyDownHandler",
          "description": "In addition to `IronButtonState` behavior, when space key goes down,\ncreate a ripple down effect.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-button-behavior.js",
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 65,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!KeyboardEvent",
              "description": "."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PaperButtonBehavior"
        },
        {
          "name": "_spaceKeyUpHandler",
          "description": "In addition to `IronButtonState` behavior, when space key goes up,\ncreate a ripple up effect.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-button-behavior.js",
            "start": {
              "line": 73,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "type": "!KeyboardEvent",
              "description": "."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PaperButtonBehavior"
        },
        {
          "name": "_asyncClick",
          "description": "event handler to unwind before triggering another event",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 168,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_pressedChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 172,
              "column": 2
            },
            "end": {
              "line": 174,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "pressed"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_ariaActiveAttributeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 176,
              "column": 2
            },
            "end": {
              "line": 180,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_activeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 182,
              "column": 2
            },
            "end": {
              "line": 189,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "active"
            },
            {
              "name": "ariaActiveAttribute"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_controlStateChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 191,
              "column": 2
            },
            "end": {
              "line": 197,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "_changedButtonState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 201,
              "column": 2
            },
            "end": {
              "line": 205,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-control-state.js",
            "start": {
              "line": 71,
              "column": 2
            },
            "end": {
              "line": 74,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronControlState"
        },
        {
          "name": "_focusBlurHandler",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-control-state.js",
            "start": {
              "line": 76,
              "column": 2
            },
            "end": {
              "line": 99,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronControlState"
        },
        {
          "name": "_disabledChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-control-state.js",
            "start": {
              "line": 101,
              "column": 2
            },
            "end": {
              "line": 120,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "disabled"
            },
            {
              "name": "old"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronControlState"
        },
        {
          "name": "_changedControlState",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-control-state.js",
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 127,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronControlState"
        },
        {
          "name": "_buttonStateChanged",
          "description": "Ensures a `<paper-ripple>` element is available when the element is\nfocused.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-ripple-behavior.js",
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 48,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "ensureRipple",
          "description": "Ensures this element contains a ripple effect. For startup efficiency\nthe ripple effect is dynamically on demand when needed.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-ripple-behavior.js",
            "start": {
              "line": 67,
              "column": 2
            },
            "end": {
              "line": 86,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "optTriggeringEvent",
              "type": "!Event=",
              "description": "(optional) event that triggered the\nripple."
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "getRipple",
          "description": "Returns the `<paper-ripple>` element used by this element to create\nripple effects. The element's ripple is created on demand, when\nnecessary, and calling this method will force the\nripple to be created.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-ripple-behavior.js",
            "start": {
              "line": 94,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "hasRipple",
          "description": "Returns true if this element currently contains a ripple effect.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-ripple-behavior.js",
            "start": {
              "line": 103,
              "column": 2
            },
            "end": {
              "line": 105,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean"
          },
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "_createRipple",
          "description": "Create the element's ripple effect via creating a `<paper-ripple>`.\nOverride this method to customize the ripple element.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-ripple-behavior.js",
            "start": {
              "line": 112,
              "column": 2
            },
            "end": {
              "line": 116,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "!PaperRippleElement",
            "desc": "Returns a `<paper-ripple>` element."
          },
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "_noinkChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-ripple-behavior.js",
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 122,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noink"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "_calculateElevation",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-button-behavior.js",
            "start": {
              "line": 37,
              "column": 2
            },
            "end": {
              "line": 47,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PaperButtonBehavior"
        },
        {
          "name": "_computeKeyboardClass",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-button-behavior.js",
            "start": {
              "line": 49,
              "column": 2
            },
            "end": {
              "line": 51,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "receivedFocusFromKeyboard"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "Polymer.PaperButtonBehavior"
        },
        {
          "name": "_labelChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 2
            },
            "end": {
              "line": 211,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeIsIconFab",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 215,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "icon"
            },
            {
              "name": "src"
            },
            {
              "name": "label"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 50,
          "column": 8
        },
        "end": {
          "line": 216,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "key-event-target",
          "description": "The EventTarget that will be firing relevant KeyboardEvents. Set it to\n`null` to disable the listeners.",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 272,
              "column": 4
            },
            "end": {
              "line": 277,
              "column": 5
            }
          },
          "metadata": {},
          "type": "?EventTarget",
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "stop-keyboard-event-propagation",
          "description": "If true, this property will cause the implementing element to\nautomatically stop propagation on any handled KeyboardEvents.",
          "sourceRange": {
            "file": "../@polymer/iron-a11y-keys-behavior/iron-a11y-keys-behavior.js",
            "start": {
              "line": 283,
              "column": 4
            },
            "end": {
              "line": 283,
              "column": 63
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronA11yKeysBehavior"
        },
        {
          "name": "pressed",
          "description": "If true, the user is currently holding down the button.",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 26,
              "column": 4
            },
            "end": {
              "line": 32,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "toggles",
          "description": "If true, the button toggles the active state with each tap or press\nof the spacebar.",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 38,
              "column": 4
            },
            "end": {
              "line": 38,
              "column": 68
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "active",
          "description": "If true, the button is a toggle and is currently in the active state.",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 43,
              "column": 4
            },
            "end": {
              "line": 44,
              "column": 77
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "pointer-down",
          "description": "True if the element is currently being pressed by a \"pointer,\" which\nis loosely defined as mouse or touch input (but specifically excluding\nkeyboard input).",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 51,
              "column": 62
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "received-focus-from-keyboard",
          "description": "True if the input device that caused the element to receive focus\nwas a keyboard.",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 57,
              "column": 62
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "aria-active-attribute",
          "description": "The aria attribute to be set if the button is a toggle and in the\nactive state.",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-button-state.js",
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "name": "focused",
          "description": "If true, the element currently has focus.",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-control-state.js",
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 31,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronControlState"
        },
        {
          "name": "disabled",
          "description": "If true, the user cannot interact with this element.",
          "sourceRange": {
            "file": "../@polymer/iron-behaviors/iron-control-state.js",
            "start": {
              "line": 36,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronControlState"
        },
        {
          "name": "noink",
          "description": "If true, the element will not produce a ripple effect when interacted\nwith via the pointer.",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-ripple-behavior.js",
            "start": {
              "line": 30,
              "column": 4
            },
            "end": {
              "line": 30,
              "column": 53
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "Polymer.PaperRippleBehavior"
        },
        {
          "name": "elevation",
          "description": "The z-depth of this element, from 0-5. Setting to 0 will remove the\nshadow, and each increasing number greater than 0 will be \"deeper\"\nthan the last.",
          "sourceRange": {
            "file": "../@polymer/paper-behaviors/paper-button-behavior.js",
            "start": {
              "line": 27,
              "column": 4
            },
            "end": {
              "line": 27,
              "column": 71
            }
          },
          "metadata": {},
          "type": "number | null | undefined",
          "inheritedFrom": "Polymer.PaperButtonBehavior"
        },
        {
          "name": "image-loaded",
          "description": "Notify that the image is loaded.",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "icon-src",
          "description": "The URL of an image for the icon. If the srcImage property is specified,\nthe icon property should not be.",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 4
            },
            "end": {
              "line": 160,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "Specifies the icon name or index in the set of icons available in\nthe icon's icon set. If the icon property is specified,\nthe src property should not be.",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "image-src",
          "description": "Permit to set the image source path or url.",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "mini",
          "description": "Set this to true to style this is a \"mini\" FAB.",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 4
            },
            "end": {
              "line": 186,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "label",
          "description": "The label displayed in the badge. The label is centered, and ideally\nshould have very few characters.",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "image-sizing",
          "description": "Permit to set the sizing image mode. The possible values are \"contain\" or \"cover\"",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 4
            },
            "end": {
              "line": 206,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "active-changed",
          "description": "Fired when the `active` property changes.",
          "metadata": {},
          "inheritedFrom": "Polymer.IronButtonState"
        },
        {
          "type": "CustomEvent",
          "name": "focused-changed",
          "description": "Fired when the `focused` property changes.",
          "metadata": {},
          "inheritedFrom": "IronControlState"
        },
        {
          "type": "CustomEvent",
          "name": "disabled-changed",
          "description": "Fired when the `disabled` property changes.",
          "metadata": {},
          "inheritedFrom": "IronControlState"
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "paper-avatar"
    }
  ]
}
